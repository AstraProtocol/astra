syntax = "proto3";
package astra.mint.v1;

option go_package = "github.com/AstraProtocol/astra/x/mint/types";

import "gogoproto/gogo.proto";

// Minter represents the minting state.
message Minter {
  // inflation is the current annual inflation rate.
  string inflation = 1
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  // annual_provisions is the current annual expected provisions.
  string annual_provisions = 2 [
    (gogoproto.moretags)   = "yaml:\"annual_provisions\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
}

// Params holds parameters for the mint module.
message Params {
  option (gogoproto.goproto_stringer) = false;

  // mint_denom indicates the type of coin to mint.
  string mint_denom = 1;
  // inflation_rate_change is the maximum annual change in inflation rate.
  string inflation_rate_change = 2 [
    (gogoproto.moretags)   = "yaml:\"inflation_rate_change\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  // inflation_max is the maximum inflation rate.
  string inflation_max = 3 [
    (gogoproto.moretags)   = "yaml:\"inflation_max\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  // inflation_min is the minimum inflation rate.
  string inflation_min = 4 [
    (gogoproto.moretags)   = "yaml:\"inflation_min\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  // goal_bonded is the expected ratio of token in stake versus the total supply.
  string goal_bonded = 5 [
    (gogoproto.moretags)   = "yaml:\"goal_bonded\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  // blocks_per_year is the expected number of blocks per year.
  uint64 blocks_per_year = 6 [(gogoproto.moretags) = "yaml:\"blocks_per_year\""];
  // inflation_distribution consists of parameters which block/epoch provision is distributed.
  InflationDistribution inflation_distribution = 7
  [ (gogoproto.nullable) = false ];
  // foundation_address is the address of the Astra Foundation for a portion of receiving provision.
  string foundation_address = 8;
}

// InflationDistribution defines how the block rewards are distributed to each module/component (i.e, Staking Rewards,
// Astra Foundation, and the Community Pool).
//
// By default, for each block/epoch reward:
//    - 88% will be allocated as Staking Rewards;
//    - 10% will be allocated to the Astra Foundation;
//    - 2% will be allocated to the Community Pool.
message InflationDistribution {
  // staking_rewards defines the proportion of the minted minted_denom allocated to validators and delegators.
  string staking_rewards = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // foundation defines the proportion of the minted minted_denom allocated to the Astra Foundation.
  string foundation = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // community_pool defines the proportion of the minted minted_denom allocated to the community pool.
  string community_pool = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}
